<!doctype html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!-- Consider adding a manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
  <meta charset="utf-8">
	<head>
		<title>And that my friends is what we call closure.</title>
	</head>

	<script>

var AppInfo = {
		getData :  function(){

		            var responseJsonVar;
		            var callbackName, script, newInfo, mydata,allMatches;
		            // Get a random name for the callback
		            callbackName = "checkGames" + new Date().getTime() + Math.floor(Math.random() * 10000);

		            // create the jsonP script call on the page
		            script = document.createElement('script');
		            script.src = "http://www.hookhockey.com/index.php/temp-gillian/?callback=" + callbackName;
		            document.documentElement.appendChild(script);

		            // call the json
		            window[callbackName] = function(data) {
		            
		                responseJsonVar = data; // this is the info back from the json file

		                //the filtered data source from json
		               var holder = responseJsonVar["matches"];
		               self.allMatches = holder;

						//console.dir('allMatches inside the function: ' + allMatches); //this comes back fine

						

		                    // Remove our callback ('delete' with 'window properties fails on some versions of IE, so we fall back to setting the property to 'undefined' if that happens)
		                    try {
		                        delete window[callbackName];
		                    }
		                    catch (e) {
		                        window[callbackName] = undefined;
		                    }

		     //I've tried putting a return value (return allMatches) in here and then calling window[callbackName]() outside of the function but I get undefined for matches
		          
		            }; // end  window[callbackName] function

		//this is what I think I should be doing to get the info out on its own
		console.log('allMatches OUTSIDE the function: ' + self.allMatches); //this doesn't come back 'allMatches is not defined'

		} //end getdata method
		
} //end AppInfo


AppInfo.getData();




	</script>
	<body>



	</body>
</html>